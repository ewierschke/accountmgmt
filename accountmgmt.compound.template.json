{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "This template creates an instance to be used for account management scripts.",
  "Metadata": {
    "AWS::CloudFormation::Interface": {
      "ParameterGroups": [
        {
          "Label": {
            "default": "Network Configuration"
          },
          "Parameters": [
            "VPC",
            "PrivateSubnetIDs",
            "PublicSubnetIDs"
          ]
        },
        {
          "Label": {
            "default": "EC2 Configuration"
          },
          "Parameters": [
            "AdminIAMGroup",
            "AmiId",
            "InstanceType",
            "KeyPairName"
          ]
        },
        {
          "Label": {
            "default": "AutoScale Configuration"
          },
          "Parameters": [
            "DesiredCapacity",
            "MaxCapacity",
            "MinCapacity",
            "SNSSubscriptionEmail"
          ]
        },
        {
          "Label": {
            "default": "AccountMgmt Script Configuration"
          },
          "Parameters": [
            "LdapServer",
            "accountmgmtConfigBucketName",
            "SvcAccountPassword",
            "UsersOUDN"
          ]
        }
      ]
    }
  },
  "Outputs": {
    "accountmgmtSecurityGroupId": {
      "Description": "Security Group ID for the instance",
      "Value": {
        "Fn::GetAtt": [
          "accountmgmtSecurityGroupStack",
          "Outputs.instanceSecurityGroupId"
        ]
      }
    }
  },
  "Parameters": {
    "AmiId": {
      "Description": "AMI ID",
      "Type": "String"
    },
    "DesiredCapacity": {
      "Default": "1",
      "Description": "The number of accountmgmt instances the autoscale group will spin up initially",
      "MinLength": "1",
      "Type": "String"
    },
    "AdminIAMGroup": {
      "Description": "ID of the IAM group to be granted SSH access to accountmgmt instances",
      "Type": "String"
    },
    "InstanceType": {
      "AllowedValues": [
        "t2.micro",
        "t2.small",
        "t2.medium",
        "t2.large",
        "t2.xlarge",
        "c4.large",
        "c4.xlarge",
        "m4.large",
        "m4.xlarge"
      ],
      "Default": "t2.micro",
      "Description": "Amazon EC2 instance type for the accountmgmt Instances",
      "Type": "String"
    },
    "KeyPairName": {
      "Description": "Public/private key pairs allow you to securely connect to your instance after it launches",
      "Type": "AWS::EC2::KeyPair::KeyName"
    },
    "LdapServer": {
      "Default": "ad.example.com",
      "Description": "Name of LDAP server from which to import accountmgmt users",
      "MinLength": "1",
      "Type": "String"
    },
    "MaxCapacity": {
      "Default": "1",
      "Description": "The maximum number of accountmgmt instances for the autoscale group",
      "MinLength": "1",
      "Type": "String"
    },
    "MinCapacity": {
      "Default": "1",
      "Description": "The minimum number of accountmgmt instances for the autoscale group",
      "MinLength": "1",
      "Type": "String"
    },
    "accountmgmtConfigBucketName": {
      "Description": "Name of the existing S3 bucket where the accountmgmt config should be pulled and pushed",
      "Type": "String"
    },
		"GitHubUsername": {
			"Description": "The username for the GitHub repo that will be cloned",
			"Type": "String"
		},
		"GitHubRepo": {
			"Description": "The GitHub repo that will be cloned",
			"Type": "String"
		},
		"SaltPillarFile": {
			"Description": "Name of the pillar file that's stored in the S3 config bucket",
			"Type": "String"
		},
    "PrivateSubnetIDs": {
      "Description": "List of Private Subnet IDs where the accountmgmt instances will run. (only select one, load balancing not tested)",
      "Type": "List<AWS::EC2::Subnet::Id>"
    },
    "PublicSubnetIDs": {
      "Description": "A list of Public subnet IDs to attach to the load balancer.",
      "Type": "List<AWS::EC2::Subnet::Id>"
    },
    "SvcAccountPassword": {
      "AllowedPattern": "(?=^.{6,255}$)((?=.*\\d)(?=.*[A-Z])(?=.*[a-z])|(?=.*\\d)(?=.*[^A-Za-z0-9])(?=.*[a-z])|(?=.*[^A-Za-z0-9])(?=.*[A-Z])(?=.*[a-z])|(?=.*\\d)(?=.*[A-Z])(?=.*[^A-Za-z0-9]))^.*",
      "Default": "Password123",
      "MaxLength": "32",
      "MinLength": "8",
      "Type": "String",
      "Description": "Service Account Password (will eventually move to using secret name)",
      "NoEcho": "true"
    },
    "SvcAccountPassSecretName": {
      "Description": "Name of the AWS secrets manager secret containing the Service Account Password",
      "NoEcho": "true",
      "Type": "String"
    },
    "UsersOUDN": {
      "Default": "CN=Users,DC=ad,DC=example,DC=com",
      "Description": "Distinguished Name (DN) of the path from which to import LDAP users",
      "MinLength": "1",
      "Type": "String"
    },
    "SNSSubscriptionEmail": {
      "AllowedPattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$",
      "Default": "deployer@example.com",
      "Description": "Email address to which AWS SNS events are sent.",
      "MinLength": "3",
      "Type": "String"
    },
    "VPC": {
      "Description": "VPC ID",
      "Type": "AWS::EC2::VPC::Id"
    },
    "accountmgmtSESIAMUserName": {
      "Description": "IAM Username used for SES email sending",
      "Type": "String",
      "Default": "",
      "MinLength": "1"
    }
  },
  "Resources": {
    "accountmgmtAutoScaleStack": {
      "DependsOn": [
        "accountmgmtSecurityGroupStack",
        "accountmgmtSNSTopicSubscriptStack"
      ],
      "Properties": {
        "Parameters": {
          "AmiId": {
            "Ref": "AmiId"
          },
          "DesiredCapacity": {
            "Ref": "DesiredCapacity"
          },
          "AdminIAMGroup": {
            "Ref": "AdminIAMGroup"
          },
          "GitHubUsername": {
            "Ref": "GitHubUsername"
          },
          "GitHubRepo": {
            "Ref": "GitHubRepo"
          },
          "SaltPillarFile": {
            "Ref": "SaltPillarFile"
          },
          "InstanceType": {
            "Ref": "InstanceType"
          },
          "KeyPairName": {
            "Ref": "KeyPairName"
          },
          "LdapServer": {
            "Ref": "LdapServer"
          },
          "MaxCapacity": {
            "Ref": "MaxCapacity"
          },
          "MinCapacity": {
            "Ref": "MinCapacity"
          },
          "accountmgmtConfigBucketName": {
            "Ref": "accountmgmtConfigBucketName"
          },
          "accountmgmtSNSTopicARN": {
            "Fn::GetAtt": [
              "accountmgmtSNSTopicSubscriptStack",
              "Outputs.SNSTopicARN"
            ]
          },
          "PrivateSubnetIDs": {
            "Fn::Join": [
              ",",
              {
                "Ref": "PrivateSubnetIDs"
              }
            ]
          },
          "SecurityGroupIdInstance": {
            "Fn::Join": [
              ",",
              [
                {
                  "Fn::GetAtt": [
                    "accountmgmtSecurityGroupStack",
                    "Outputs.instanceSecurityGroupId"
                  ]
                }
              ]
            ]
          },
          "SvcAccountPassword": {
            "Ref": "SvcAccountPassword"
          },
          "SvcAccountPassSecretName": {
            "Ref": "SvcAccountPassSecretName"
          },
          "UsersOUDN": {
            "Ref": "UsersOUDN"
          },
          "accountmgmtSESIAMUserName": {
            "Ref": "accountmgmtSESIAMUserName"
          }
        },
        "TemplateURL": "https://s3.amazonaws.com/accountmgmt-cfn/accountmgmt_private_autoscale.element.template.json"
      },
      "Type": "AWS::CloudFormation::Stack"
    },
    "accountmgmtSecurityGroupStack": {
      "Properties": {
        "Parameters": {
          "VPC": {
            "Ref": "VPC"
          }
        },
        "TemplateURL": "https://s3.amazonaws.com/accountmgmt-cfn/accountmgmt_security_group.element.template.json"
      },
      "Type": "AWS::CloudFormation::Stack"
    },
    "accountmgmtSNSTopicSubscriptStack": {
      "Properties": {
        "Parameters": {
          "SNSSubscriptionEmail": {
            "Ref": "SNSSubscriptionEmail"
          }
        },
        "TemplateURL": "https://s3.amazonaws.com/accountmgmt-cfn/accountmgmt_sns_topic_subscript.element.template.json"
      },
      "Type": "AWS::CloudFormation::Stack"
    }
  }
}
